name: Deploy
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Verify secrets exist
      - name: Check secrets
        run: |
          if [ -z "${{ secrets.GH_TOKEN }}" ]; then
            echo "::error::GH_TOKEN is not set"
            exit 1
          else
            echo "✓ GH_TOKEN is set"
          fi
          if [ -z "${{ secrets.NOTIFICATION_EMAIL }}" ]; then
            echo "::error::NOTIFICATION_EMAIL is not set"
            exit 1
          else
            echo "✓ NOTIFICATION_EMAIL is set"
          fi

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: false

      # Fix platform issue before bundle install
      - name: Fix bundle platforms
        run: |
          gem install bundler
          bundle config set --local path 'vendor/bundle'
          bundle config --local build.sassc --disable-march-tune-native
          bundle config set --local force_ruby_platform true
          bundle install

      - name: Create config.js
        run: |
          # Create directories
          mkdir -p _site/assets/js
          
          # Create config file content
          CONFIG_CONTENT="// GitHub token injected by GitHub Actions
          window.GITHUB_TOKEN = '${{ secrets.GH_TOKEN }}';
          window.NOTIFICATION_EMAIL = '${{ secrets.NOTIFICATION_EMAIL }}';"
          
          # Write directly to _site directory
          echo "$CONFIG_CONTENT" > _site/assets/js/config.js
          chmod 644 _site/assets/js/config.js
          
          echo "Created config.js at: $(pwd)/_site/assets/js/config.js"
          ls -la _site/assets/js/config.js

      - name: Build site
        run: |
          bundle exec jekyll clean
          bundle exec jekyll build
        env:
          JEKYLL_ENV: production
          JEKYLL_PAT: ${{ secrets.GH_TOKEN }}

      # Additional verification after build
      - name: Verify config.js after build
        run: |
          echo "Checking final config.js location:"
          find _site -name config.js
          echo "Checking final config.js content (redacted):"
          cat _site/assets/js/config.js | sed 's/GITHUB_TOKEN.*/GITHUB_TOKEN = [REDACTED];/'

      - name: Verify build output
        run: |
          if [ ! -d "_site" ]; then
            echo "::error::_site directory not created"
            exit 1
          fi
          if [ ! -f "_site/assets/js/config.js" ]; then
            echo "::error::config.js not in build output"
            exit 1
          fi
          echo "Checking config.js in output:"
          ls -la _site/assets/js/config.js
          echo "File contents (redacted):"
          cat _site/assets/js/config.js | sed 's/GITHUB_TOKEN.*$/GITHUB_TOKEN = [REDACTED]/'
          echo "✓ Build output verified"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./_site
          publish_branch: gh-pages
          force_orphan: true