name: Deploy
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Verify secrets exist
      - name: Check secrets
        run: |
          if [ -z "${{ secrets.GH_TOKEN }}" ]; then
            echo "::error::GH_TOKEN is not set"
            exit 1
          else
            echo "✓ GH_TOKEN is set"
          fi
          if [ -z "${{ secrets.NOTIFICATION_EMAIL }}" ]; then
            echo "::error::NOTIFICATION_EMAIL is not set"
            exit 1
          else
            echo "✓ NOTIFICATION_EMAIL is set"
          fi

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: false

      # Fix platform issue before bundle install
      - name: Fix bundle platforms
        run: |
          gem install bundler
          bundle config set --local path 'vendor/bundle'
          bundle config --local build.sassc --disable-march-tune-native
          bundle config set --local force_ruby_platform true
          bundle install

      - name: Create config.js
        run: |
          # Create directories
          mkdir -p _site/assets/js
          
          # Create config file content with obfuscated token
          CONFIG_CONTENT=$(cat << 'EOL'
          // GitHub token injected by GitHub Actions
          window.GITHUB_TOKEN = atob('${{ secrets.GH_TOKEN_BASE64 }}'); // Base64 encoded token
          window.NOTIFICATION_EMAIL = '${{ secrets.NOTIFICATION_EMAIL }}';
          EOL
          )
          
          # Write directly to _site directory
          echo "$CONFIG_CONTENT" > _site/assets/js/config.js
          chmod 644 _site/assets/js/config.js
          
          echo "Created config.js:"
          ls -la _site/assets/js/config.js

      - name: Build site
        run: |
          bundle exec jekyll clean
          bundle exec jekyll build
          
          # Ensure config.js exists after build
          if [ ! -f "_site/assets/js/config.js" ]; then
            echo "Recreating config.js after build"
            echo "$CONFIG_CONTENT" > _site/assets/js/config.js
            chmod 644 _site/assets/js/config.js
          fi

      - name: Verify build output
        run: |
          echo "Checking site structure:"
          tree _site/assets/js || find _site/assets/js -type f
          
          if [ ! -d "_site" ]; then
            echo "::error::_site directory not created"
            exit 1
          fi
          
          if [ ! -f "_site/assets/js/config.js" ]; then
            echo "::error::config.js not in build output"
            exit 1
          fi
          
          echo "Config.js contents (redacted):"
          cat _site/assets/js/config.js | sed 's/window.GITHUB_TOKEN.*/window.GITHUB_TOKEN = [REDACTED];/'

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./_site
          publish_branch: gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          force_orphan: true

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote -v
          if ! git remote | grep -q 'origin'; then
            git remote add origin "https://github.com/Risch315815/Animal_Hospital__Dental_Department.git"
          fi